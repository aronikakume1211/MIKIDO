{"version":3,"sources":["components/todoitm.js","components/todos.js","components/pages/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["todoitem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","collapse","collapse_label","getStyle","props","todo","completed","textDecoration","toggle","setState","inherits","createClass","key","value","react_default","a","createElement","className","style","type","onChange","makeComplete","bind","id","title","seemore","onClick","deltodo","Modal","isOpen","ModalHeader","charCode","header","color","ModalBody","description","ModalFooter","card","Button","Component","backgroundColor","borderRadius","border","float","todos","map","todoitm","AddTodo","onChangeOnTitle","event","defineProperty","target","name","onSubmit","e","preventDefault","addTodos","Fragment","h1","Form","FormGroup","Label","for","Input","placeholder","btn","textShadow","position","height","left","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","textAlign","boxShadow","componentName","Row","Col","sm","Card","body","CardTitle","CardText","href","App","searchTerm","homechange","console","log","toConsumableArray","filter","Axios","post","uuid","v4","then","res","data","_this2","get","result","_this3","_this$state","react_router_dom","to","links","react_router","exact","path","render","pages_AddTodo","components_todos","component","About","padding","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4UAKaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEIQ,MAAQ,CACJC,UAAU,EACVC,eAAgB,QAJxBjB,EAMIkB,SAAW,WACP,OAAIlB,EAAKmB,MAAMC,KAAKC,UACT,CACHC,eAAgB,gBAGb,CACHA,eAAgB,SAbhCtB,EAiBIuB,OAAS,WACLvB,EAAKwB,SAAS,CAAER,UAAWhB,EAAKe,MAAMC,WACjChB,EAAKe,MAAMC,SAIZhB,EAAKwB,SAAS,CAAEP,eAAgB,SAHhCjB,EAAKwB,SAAS,CAAEP,eAAgB,WApB5CjB,EAAA,OAAAC,OAAAwB,EAAA,EAAAxB,CAAAJ,EAAAC,GAAAG,OAAAyB,EAAA,EAAAzB,CAAAJ,EAAA,EAAA8B,IAAA,SAAAC,MAAA,WA8BQ,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO9B,KAAKe,YACnCW,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YACTH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WAAWC,SAAUhC,KAAKgB,MAAMiB,aAAaC,KAAKlC,KAAMA,KAAKgB,MAAMC,KAAKkB,MACnF,IAAKnC,KAAKgB,MAAMC,KAAKmB,MACtBV,EAAAC,EAAAC,cAAA,UAAQE,MAAOO,EAASC,QAAStC,KAAKoB,QAASpB,KAAKY,MAAME,gBAC1DY,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaS,QAAStC,KAAKgB,MAAMuB,QAAQL,KAAKlC,KAAMA,KAAKgB,MAAMC,KAAKkB,KAAtF,MAGJT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,OAAQzC,KAAKY,MAAMC,SAAUO,OAAQpB,KAAKoB,QAC7CM,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAatB,OAAQpB,KAAKoB,OAAQuB,SAAS,IAAIb,MAAOc,EAAQC,MAAM,WAC/D7C,KAAKgB,MAAMC,KAAKmB,OAErBV,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAWjB,UAAU,QACX7B,KAAKgB,MAAMC,KAAK8B,YAD1B,IACwC,IADxC,yNAOArB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAalB,MAAOmB,GAChBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQL,MAAM,YAAYP,QAAStC,KAAKoB,QAAxC,iBApDxB1B,EAAA,CAA8ByD,aA6DxBF,EAAO,CACTG,gBAAiB,WAEfR,EAAO,CACTQ,gBAAgB,kBAChBC,aAAa,KACbC,OAAO,OACPT,MAAM,SAGJR,EAAU,CACZe,gBAAiB,mBACjBG,MAAO,QACPD,OAAQ,OACRD,aAAc,QAEH3D,ICxCA8D,mLAnCJ,IAAA3D,EAAAG,KACP,OAAOA,KAAKgB,MAAMwC,MAAMC,IAAI,SAACxC,GAAD,OAC1BS,EAAAC,EAAAC,cAAE8B,EAAF,CAAYlC,IAAKP,EAAKkB,GAAIlB,KAAMA,EAAMgB,aAAcpC,EAAKmB,MAAMiB,aAC/DM,QAAS1C,EAAKmB,MAAMuB,mBALNY,uDCDdQ,6MACF/C,MAAQ,CACJwB,MAAO,GACPW,YAAa,MAEjBa,gBAAkB,SAACC,GACfhE,EAAKwB,SAALvB,OAAAgE,EAAA,EAAAhE,CAAA,GACK+D,EAAME,OAAOC,KAAOH,EAAME,OAAOtC,WAG1CwC,SAAW,SAACC,GACRA,EAAEC,iBACFtE,EAAKmB,MAAMoD,SAASvE,EAAKe,MAAMwB,MAAOvC,EAAKe,MAAMmC,aACjDlD,EAAKe,MAAMwB,MAAQ,GACnBvC,EAAKe,MAAMmC,YAAc,4EAIzB,OACIrB,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KACI3C,EAAAC,EAAAC,cAAA,MAAIE,MAAOwC,GAAX,YAEA5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAMN,SAAUjE,KAAKiE,UAEjBvC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACI9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAOC,IAAI,QAAX,UACAhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,YAAY,YACZZ,KAAK,QACLvC,MAAOzB,KAAKY,MAAMwB,MAClBJ,SAAUhC,KAAK4D,mBAGvBlC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACI9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAOC,IAAI,QAAX,gBACAhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI5C,KAAK,WACLiC,KAAK,cAAc7B,GAAG,OACtByC,YAAY,kBACZnD,MAAOzB,KAAKY,MAAMmC,YAClBf,SAAUhC,KAAK4D,mBAGvBlC,EAAAC,EAAAC,cAAA,SAAOG,KAAK,SAASD,MAAO+C,EAAKpD,MAAM,sBA3CrC0B,aAiDhBmB,EAAK,CACPzB,MAAO,SACPiC,WAAW,qDAGTD,EAAM,CACRzB,gBAAiB,mBACjB2B,SAAU,WACVC,OAAQ,OACRC,KAAM,MACNC,WAAY,SACZC,UAAW,SACXC,WAAY,SACZC,SAAU,OACVC,WAAY,SACZC,UAAW,SACX1C,MAAO,UACPQ,aAAc,OACdmC,UAAW,gBAEA7B,iDCxCA8B,mLA7BP,OACI/D,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACPhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAKC,GAAG,KACNlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAMC,MAAI,GACRpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,yBACArE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,sFACAtE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,8BAIJtE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAKC,GAAG,KACNlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAMC,MAAI,GAERpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,mBACArE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,uBACAtE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,8CACAtE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,qHAGAtE,EAAAC,EAAAC,cAAA,KAAGqE,KAAK,2CAAR,8BAtBkB9C,uDCgBtB+C,cAEJ,SAAAA,EAAYlF,GAAO,IAAAnB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkG,IACjBrG,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAoG,GAAAzF,KAAAT,KAAMgB,KAERJ,MAAQ,CACNuF,WAAY,GACZ3C,MAAO,CAEL,KAPe3D,EAsCnBuG,WAAa,WACX,OACE1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAzCa/B,EA6CnBoC,aAAe,SAACE,GACdtC,EAAKwB,SAAS,CACZmC,MAAO3D,EAAKe,MAAM4C,MAAMC,IAAI,SAAAxC,GAI1B,OAHIA,EAAKkB,KAAOA,IACdlB,EAAKC,WAAaD,EAAKC,WAElBD,OAnDMpB,EAwDnB0C,QAAU,SAACJ,GACTkE,QAAQC,IAAInE,EAAK,gBACjBtC,EAAKwB,SAAS,CACZmC,MAAM1D,OAAAyG,EAAA,EAAAzG,CAAKD,EAAKe,MAAM4C,MAAMgD,OAAO,SAAAvF,GAAI,OAAIA,EAAKkB,KAC1CA,QA5DStC,EAyEnBuE,SAAS,SAAChC,EAAMW,GAQc,MAAxBX,GAASW,IACX0D,IAAMC,KAAK,8CAA8C,CACzDvE,GAAGwE,IAAKC,KACRxE,QACAW,cACA7B,WAAU,IAEX2F,KAAK,SAAAC,GAAG,OAAGjH,EAAKwB,SAAS,CAACmC,MAAK,GAAA7C,OAAAb,OAAAyG,EAAA,EAAAzG,CAAKD,EAAKe,MAAM4C,OAAhB,CAAsBsD,EAAIC,YAxFzClH,mFAiCA,IAAAmH,EAAAhH,KACjByG,IAAMQ,IAAI,yDACTJ,KAAK,SAAAK,GAAM,OAAGF,EAAK3F,SAAS,CAAEmC,MAAM0D,EAAOH,0CA0DrC,IAAAI,EAAAnH,KAAAoH,EAOuBpH,KAAKY,MAP5BwG,EAOCjB,WAPDiB,EAOa5D,MACpB,OACE9B,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,IAAIxF,MAAOyF,GAApB,QACA7F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,SAASxF,MAAOyF,GAAzB,WAIJ7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA3G,GAAK,OACjCU,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KACK3C,EAAAC,EAAAC,cAACgG,EAAD,CAASxD,SAAU+C,EAAK/C,WAAW1C,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAAA,MAAIE,MAAOwC,GAAX,SAMP5C,EAAAC,EAAAC,cAACiG,EAAD,CAAOrE,MAAO2D,EAAKvG,MAAM4C,MAAOvB,aAAckF,EAAKlF,aAAcM,QAAS4E,EAAK5E,cAIhFb,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOE,KAAK,SAASI,UAAWC,aA/HvB5E,aAwIZmB,EAAK,CACTzB,MAAO,SACPiC,WAAW,qDAGPyC,EAAM,CACV1E,MAAO,QACPmF,QAAS,KACT7G,eAAgB,QAEH+E,UCxJK+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASX,OAAOjG,EAAAC,EAAAC,cAAC2G,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/B,KAAK,SAAAgC,GACjCA,EAAaC","file":"static/js/main.cb46ee46.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../App.css';\nimport { ListGroupItem, Collapse, Button, CardBody, Card, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\n\nexport class todoitem extends Component {\n\n    state = {\n        collapse: false,\n        collapse_label: 'More'\n    }\n    getStyle = () => {\n        if (this.props.todo.completed) {\n            return {\n                textDecoration: 'line-through'\n            }\n        } else {\n            return {\n                textDecoration: 'none'\n            }\n        }\n    }\n    toggle = () => {\n        this.setState({ collapse: !this.state.collapse });\n        if (!this.state.collapse) {\n            this.setState({ collapse_label: 'Close' });\n\n        } else {\n            this.setState({ collapse_label: 'More' });\n        }\n\n    }\n\n\n    render() {\n        return (\n\n            <div className='styleItem' style={this.getStyle()}>\n                <p className=\"fortodos\" >\n                    <input type=\"checkbox\" onChange={this.props.makeComplete.bind(this, this.props.todo.id)} />\n                    {\" \"}{this.props.todo.title}\n                    <button style={seemore} onClick={this.toggle}>{this.state.collapse_label}</button>\n                    <button className='Cancle_btn' onClick={this.props.deltodo.bind(this, this.props.todo.id)}>x</button>\n                </p>\n\n                <Modal isOpen={this.state.collapse} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle} charCode=\"X\" style={header} color=\"primary\">\n                        {this.props.todo.title}\n                    </ModalHeader>\n                    <ModalBody className=\"bady\">\n                             {this.props.todo.description} {\" \"}\n                             Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt magni, voluptas debitis\n                             similique porro a molestias consequuntur earum odio officiis natus, amet hic, iste sed\n                             dignissimos esse fuga! Minus, alias.\n                   </ModalBody>\n\n                    <ModalFooter style={card}>\n                        <Button color=\"secondary\" onClick={this.toggle} >Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n               \n            </div>\n\n        )\n    }\n}\nconst card = {\n    backgroundColor: '#2F4F4F'\n}\nconst header={\n    backgroundColor:'rgb(12, 20, 34)',\n    borderRadius:'50',\n    border:'none',\n    color:'white'\n    \n}\nconst seemore = {\n    backgroundColor: 'rgb(27, 99, 112)',\n    float: 'right',\n    border: 'none',\n    borderRadius: '20px'\n}\nexport default todoitem","import React, { Component } from 'react'\nimport Todoitem from './todoitm';\nimport '../App.css';\n\n//import { UncontrolledCollapse, Button, CardBody, Card } from 'reactstrap';\nclass todos extends Component {\n \n  render() {\n    return this.props.todos.map((todo)=>(\n      < Todoitem  key={todo.id} todo={todo} makeComplete={this.props.makeComplete} \n      deltodo={this.props.deltodo}/>\n    ))\n      \n        {/*  <div>\n          <input type=\"checkbox\"/>\n        <h5 key={todo.id} className=\"fortodos\" id={\"toggle_\"+1}>\n        {<todoitem />}\n          \n        \n          <UncontrolledCollapse toggler=\"#toggle_1\">\n      <Card>\n        <CardBody>\n          {todo.description}\n        </CardBody>\n      </Card>\n    </UncontrolledCollapse>  \n        </h5>\n        <button style={btn}>x</button>\n       </div> */}\n      \n    \n  }\n}\nconst btn = {\n  backgroundColor: 'red',\n  borderRadius: '50%',\n  float: 'right',\n  flex:\"right\",\n  border: 'none'\n\n\n}\nexport default todos;\n","import React, { Component } from 'react'\nimport { Form, FormGroup, Button, Label, Input, FormFeedback, FormText } from 'reactstrap';\n\n\nclass AddTodo extends Component {\n    state = {\n        title: '',\n        description: ''\n    }\n    onChangeOnTitle = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodos(this.state.title, this.state.description);\n        this.state.title = '';\n        this.state.description = '';\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <h1 style={h1}>ADD TODO</h1>\n\n                <Form onSubmit={this.onSubmit}>\n\n                    <FormGroup>\n                        <Label for=\"text\">Title*</Label>\n                        <Input\n                            placeholder=\"Add title\"\n                            name=\"title\"\n                            value={this.state.title}\n                            onChange={this.onChangeOnTitle}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"text\">Description*</Label>\n                        <Input\n                            type=\"textarea\"\n                            name=\"description\" id=\"desc\"\n                            placeholder=\"add description\"\n                            value={this.state.description}\n                            onChange={this.onChangeOnTitle}\n                        />\n                    </FormGroup>\n                    <input type=\"submit\" style={btn} value=\"Add Todo\" />\n                </Form>\n            </React.Fragment>\n        )\n    }\n}\nconst h1 = {\n    color: 'yellow',\n    textShadow:'-1px 0 red, 0 1px black, 2px 0 black, 0 -2px blue',\n   \n}\nconst btn = {\n    backgroundColor: 'rgb(27, 99, 112)',\n    position: 'absolute',\n    height: '35px',\n    left: '50%',\n    fontFamily: 'Roboto',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '25px',\n    lineHeight: 'normal',\n    textAlign: 'center',\n    color: '#FFFFFF',\n    borderRadius: '24px',\n    boxShadow: '2px 2px grey'\n}\nexport default AddTodo;\n","import React, { Component } from 'react'\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nclass componentName extends Component {\n    render () {\n        return (\n            <div >\n             <Row>\n      <Col sm=\"8\">\n        <Card body>\n          <CardTitle>About MikiDo App</CardTitle>\n          <CardText>MKIDO is an app used us you want i.e like for Diary,notebook and other things</CardText>\n          <CardText>mikido v1.0.0 @2019</CardText>\n          \n        </Card>\n      </Col>\n      <Col sm=\"4\">\n        <Card body>\n        \n          <CardTitle>Developers</CardTitle>\n          <CardText>Mebratu Kumera</CardText>\n          <CardText>Software Engineering Student at AASTU</CardText>\n          <CardText>“It doesn’t matter where you are coming from; all that really\nmatters is where you are going“</CardText>\n\n          <a href=\"https://www.facebook.com/mebratu.kumera\">follow us on fb</a>\n        </Card>\n      </Col>\n    </Row>\n            </div>\n        )\n    }\n}\n\nexport default componentName","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\n//import logo from './logo.svg';\n//import { Progress,Spinner,InputGroup, InputGroupAddon, Button, Input,Collapse, CardBody, Card, CardImg, CardTitle, CardText, CardColumns,\n//CardSubtitle  } from 'reactstrap';\nimport './App.css';\nimport { InputGroup, InputGroupAddon, Button, Input, Nav, NavItem, NavLink, Navbar } from 'reactstrap';\nimport { container } from 'reactstrap';\nimport Todos from './components/todos';\nimport AddTodo from './components/pages/AddTodo';\nimport About from './components/pages/About';\nimport { Link } from 'react-router-dom';\nimport uuid from 'uuid';\nimport { log } from 'util';\nimport Axios from 'axios';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);;\n  }\n  state = {\n    searchTerm: '',\n    todos: [\n      // for local use only or before\n      {/* {\n        id: 1,\n        title: \"Developing software is fun\",\n        description: \"What the facken software 1\",\n        completed: false\n      },\n      {\n        id: 2,\n        title: \"assigned a value but never used\",\n        description: \"What the facken software 2\",\n        completed: false\n      },\n      {\n        id: 3,\n        title: \"Fix:unreachable code after return statement\",\n        description: \"What the facken software 3\",\n        completed: false\n      },\n      {\n        id: 4,\n        title: \"Block is redundant  \",\n        description: \"What the facken software\",\n        completed: false\n      } */}\n    ]\n  }\n  componentDidMount(){\n    Axios.get('https://jsonplaceholder.typicode.com/posts/?_limit=10')\n    .then(result=> this.setState({ todos:result.data}))\n  }\n\n  homechange = () => {\n    return (\n      <div>\n        <addtodos />\n      </div>\n    );\n  }\n  makeComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    })\n\n  }\n  deltodo = (id) => {\n    console.log(id + \" is deleted \");\n    this.setState({\n      todos: [...this.state.todos.filter(todo => todo.id\n        !== id)]\n    })\n\n  }\n \n   /*  search = () => {\n    console.log('hello');\n  }\n  onSearchChange = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  } */\n  \n  // Add todo\n  addTodos=(title,description)=>{\n   /*  const newTodo={\n      id:uuid.v4(),\n      title,\n      description, \n      completed:false\n    }\n    */\n    if((title && description)!==''){\n      Axios.post('https://jsonplaceholder.typicode.com/posts/',{\n      id:uuid.v4(),\n      title,\n      description,\n      completed:false\n    })\n    .then(res=> this.setState({todos:[...this.state.todos,res.data]})\n    )\n   }\n    \n  }\n  render() {\n   /*  const isSearchd = (searchTerm) => {\n      return (item) => {\n        return item.title.toLowerCase().includes(searchTerm.toLowerCase());\n      }\n    } */\n    \n    const { searchTerm, todos } = this.state\n    return (\n      <Router>\n        <div className=\"container\">\n          <div className=\"Header\">\n            <h1>MIKIDO </h1>\n            <div className=\"menu\" >\n              <Link to=\"/\" style={links}>Home</Link>\n              <Link to=\"/About\" style={links}>About</Link>\n            </div>\n\n          </div>\n          <Route exact path=\"/\" render={props=>(\n            <React.Fragment>\n                 <AddTodo addTodos={this.addTodos}/><br /><br />\n                 <h1 style={h1}>Todos</h1>\n                \n         \n            {/* {todos.filter(isSearchd(searchTerm)).map(item => {\n              console.log(item);\n            })} */}\n          <Todos todos={this.state.todos} makeComplete={this.makeComplete} deltodo={this.deltodo} />\n         \n            </React.Fragment>\n          )}/>\n         <Route path='/About' component={About } />\n         \n          </div>\n      </Router>\n\n\n    );\n  }\n}\nconst h1 = {\n  color: 'yellow',\n  textShadow:'-1px 0 red, 0 1px black, 2px 0 black, 0 -2px blue',\n \n}\nconst links={\n  color: 'white',\n  padding: '1%',\n  textDecoration: 'none'\n}\nexport default App;\n\n\n{/* \n   constructor(props) {\n    super(props);\n    this.onEntering = this.onEntering.bind(this);\n    this.onEntered = this.onEntered.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.state = { collapse: false, status: 'Closed' };\n  }\n\n  onEntering() {\n    this.setState({ status: 'Opening...' });\n  }\n\n  onEntered() {\n    this.setState({ status: 'Opened' });\n  }\n\n  onExiting() {\n    this.setState({ status: 'Closing...' });\n  }\n\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n<CardColumns>\n      <Card>\n        <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=256%C3%97180&w=256&h=180\" alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle>Card title</CardTitle>\n          <CardSubtitle>Card subtitle</CardSubtitle>\n          <CardText>This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</CardText>\n          <Button>Button</Button>\n        </CardBody>\n      </Card>\n      <Card>\n        <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=256%C3%97180&w=256&h=180\" alt=\"Card image cap\" />\n      </Card>\n      <Card>\n        <CardBody>\n          <CardTitle>Card title</CardTitle>\n          <CardSubtitle>Card subtitle</CardSubtitle>\n          <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\n          <Button>Button</Button>\n        </CardBody>\n      </Card>\n      <Card body inverse style={{ backgroundColor: '#333', borderColor: '#333' }}>\n        <CardTitle>Special Title Treatment</CardTitle>\n        <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n        <Button>Button</Button>\n      </Card>\n      <Card>\n        <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=256%C3%97180&w=256&h=180\" alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle>Card title</CardTitle>\n          <CardSubtitle>Card subtitle</CardSubtitle>\n          <CardText>This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</CardText>\n          <Button>Button</Button>\n        </CardBody>\n      </Card>\n      <Card body inverse color=\"primary\">\n        <CardTitle>Special Title Treatment</CardTitle>\n        <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n        <Button color=\"secondary\">Button</Button>\n      </Card>\n    </CardColumns>\n\n<Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\n        <h5>Current state: {this.state.status}</h5>\n        <Collapse\n          isOpen={this.state.collapse}\n          onEntering={this.onEntering}\n          onEntered={this.onEntered}\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n        >\n          <Card>\n            <CardBody>\n              Anim pariatur cliche reprehenderit,\n             enim eiusmod high life accusamus terry richardson ad squid. Nihil\n             anim keffiyeh helvetica, craft beer labore wes anderson cred\n             nesciunt sapiente ea proident.\n            </CardBody>\n          </Card>\n        </Collapse>\n\n       <Spinner color=\"primary\" />\n        <Spinner color=\"secondary\" />\n        <Spinner color=\"success\" />\n        <Spinner color=\"danger\" />\n        <Spinner color=\"warning\" />\n        <Spinner color=\"info\" />\n        <Spinner color=\"light\" />\n        <Spinner color=\"dark\" />\n        <Spinner style={{ width: '3rem', height: '3rem' }} />{' '}\n<Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\n      <div className=\"text-center\">Plain</div>\n      <Progress multi>\n        <Progress bar value=\"15\" />\n        <Progress bar color=\"success\" value=\"20\" />\n        <Progress bar color=\"info\" value=\"25\" />\n        <Progress bar color=\"warning\" value=\"20\" />\n        <Progress bar color=\"danger\" value=\"15\" />\n      </Progress>\n      <div className=\"text-center\">With Labels</div>\n      <Progress multi>\n        <Progress bar value=\"15\">Meh</Progress>\n        <Progress bar color=\"success\" value=\"35\">Wow!</Progress>\n        <Progress bar color=\"warning\" value=\"25\">25%</Progress>\n        <Progress bar color=\"danger\" value=\"25\">LOOK OUT!!</Progress>\n      </Progress>\n      <div className=\"text-center\">Stripes and Animations</div>\n      <Progress multi>\n        <Progress bar striped value=\"15\">Stripes</Progress>\n        <Progress bar animated color=\"success\" value=\"30\">Animated Stripes</Progress>\n        <Progress bar color=\"info\" value=\"25\">Plain</Progress>\n      </Progress>\n      \n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <Button>To the Left!</Button>\n        </InputGroupAddon>\n        <Input />\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <Input />\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"secondary\">To the Right!</Button>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <Button color=\"danger\">To the Left!</Button>\n        </InputGroupAddon>\n        <Input placeholder=\"and...\" />\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"success\">To the Right!</Button>\n        </InputGroupAddon>\n      </InputGroup>\n      \n    \n        */} {/*  <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> \n      </div>\n      */}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}